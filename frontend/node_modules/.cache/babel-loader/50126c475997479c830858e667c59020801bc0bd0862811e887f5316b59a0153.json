{"ast":null,"code":"import axios from 'axios';\n\n// Base URL for the backend\nconst API_URL = 'http://localhost:5000'; // Adjust the port if needed\n\n// Login function\nexport const login = async (username, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      username,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Fetch all books\nexport const fetchBooks = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/books`);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Fetch a book by ID\nexport const fetchBookById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/books/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Add a new book\nexport const addBook = async (book, token) => {\n  try {\n    const response = await axios.post(`${API_URL}/books`, book, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Update an existing book\nexport const updateBook = async (id, book, token) => {\n  try {\n    const response = await axios.put(`${API_URL}/books/${id}`, book, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Delete a book\nexport const deleteBook = async (id, token) => {\n  try {\n    const response = await axios.delete(`${API_URL}/books/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","login","username","password","response","post","data","error","fetchBooks","get","fetchBookById","id","addBook","book","token","headers","Authorization","updateBook","put","deleteBook","delete"],"sources":["C:/Users/parve/Desktop/book system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base URL for the backend\r\nconst API_URL = 'http://localhost:5000'; // Adjust the port if needed\r\n\r\n// Login function\r\nexport const login = async (username, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, { username, password });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\n// Fetch all books\r\nexport const fetchBooks = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/books`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\n// Fetch a book by ID\r\nexport const fetchBookById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/books/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\n// Add a new book\r\nexport const addBook = async (book, token) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/books`, book, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\n// Update an existing book\r\nexport const updateBook = async (id, book, token) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/books/${id}`, book, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\n// Delete a book\r\nexport const deleteBook = async (id, token) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/books/${id}`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response.data;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,EAAE;MAAEE,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC7E,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAML,KAAK,CAACU,GAAG,CAAC,GAAGT,OAAO,QAAQ,CAAC;IACpD,OAAOI,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,aAAa,GAAG,MAAOC,EAAE,IAAK;EACzC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAML,KAAK,CAACU,GAAG,CAAC,GAAGT,OAAO,UAAUW,EAAE,EAAE,CAAC;IAC1D,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,OAAO,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;EAC5C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,EAAEa,IAAI,EAAE;MAC1DE,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUF,KAAK;MAAG;IAC9C,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,UAAU,GAAG,MAAAA,CAAON,EAAE,EAAEE,IAAI,EAAEC,KAAK,KAAK;EACnD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAML,KAAK,CAACmB,GAAG,CAAC,GAAGlB,OAAO,UAAUW,EAAE,EAAE,EAAEE,IAAI,EAAE;MAC/DE,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUF,KAAK;MAAG;IAC9C,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAMa,UAAU,GAAG,MAAAA,CAAOR,EAAE,EAAEG,KAAK,KAAK;EAC7C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAML,KAAK,CAACqB,MAAM,CAAC,GAAGpB,OAAO,UAAUW,EAAE,EAAE,EAAE;MAC5DI,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUF,KAAK;MAAG;IAC9C,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}