{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parve\\\\Desktop\\\\book system\\\\frontend\\\\src\\\\components\\\\Books.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n\n// const Books = ({ token }) => {\n//   const [books, setBooks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const fetchBooks = async () => {\n//       try {\n//         const response = await fetch('http://localhost:7000/books');\n//         const data = await response.json();\n//         setBooks(data);\n//       } catch (error) {\n//         console.error(\"Error fetching books:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchBooks();\n//   }, []);\n\n//   if (loading) {\n//     return <p>Loading books...</p>;\n//   }\n\n//   return (\n//     <div>\n//       <h1>Books</h1>\n//       {books.length === 0 ? (\n//         <p>No books available.</p>\n//       ) : (\n//         <ul>\n//           {books.map((book) => (\n//             <li key={book.id}>\n//               <h3>{book.title}</h3>\n//               <p>{book.author}</p>\n//               <p>{book.description}</p>\n//               <img src={book.coverImage} alt={book.title} style={{ width: '150px' }} />\n//               {token && (\n//                 <button onClick={() => alert(`Editing book with ID: ${book.id}`)}>\n//                   Edit\n//                 </button>\n//               )}\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Books;\n\n// --------------------------------------------------------\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Books = ({\n  token\n}) => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        const response = await fetch('http://localhost:7000/books');\n        const data = await response.json();\n        setBooks(data);\n      } catch (error) {\n        console.error(\"Error fetching books:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBooks();\n  }, []);\n  const handleDelete = async bookId => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this book?');\n    if (confirmDelete) {\n      try {\n        const response = await fetch(`http://localhost:7000/books/${bookId}`, {\n          method: 'DELETE'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to delete book');\n        }\n\n        // Remove the deleted book from the state\n        setBooks(prevBooks => prevBooks.filter(book => book.id !== bookId));\n        alert('Book deleted successfully!');\n      } catch (error) {\n        console.error(\"Error deleting book:\", error);\n        alert('Failed to delete book');\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading books...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), books.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No books available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: book.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: book.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: book.coverImage,\n          alt: book.title,\n          style: {\n            width: '150px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), token && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => alert(`Editing book with ID: ${book.id}`),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(book.id),\n            style: {\n              backgroundColor: 'red',\n              color: 'white',\n              marginLeft: '10px'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Books, \"ChkvWGV9GOBJOq4oIXyrg5ci6S0=\");\n_c = Books;\nexport default Books;\nvar _c;\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Books","token","_s","books","setBooks","loading","setLoading","fetchBooks","response","fetch","data","json","error","console","handleDelete","bookId","confirmDelete","window","confirm","method","ok","Error","prevBooks","filter","book","id","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","author","description","src","coverImage","alt","style","width","onClick","backgroundColor","color","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/parve/Desktop/book system/frontend/src/components/Books.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n\r\n// const Books = ({ token }) => {\r\n//   const [books, setBooks] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const fetchBooks = async () => {\r\n//       try {\r\n//         const response = await fetch('http://localhost:7000/books');\r\n//         const data = await response.json();\r\n//         setBooks(data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching books:\", error);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchBooks();\r\n//   }, []);\r\n\r\n//   if (loading) {\r\n//     return <p>Loading books...</p>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Books</h1>\r\n//       {books.length === 0 ? (\r\n//         <p>No books available.</p>\r\n//       ) : (\r\n//         <ul>\r\n//           {books.map((book) => (\r\n//             <li key={book.id}>\r\n//               <h3>{book.title}</h3>\r\n//               <p>{book.author}</p>\r\n//               <p>{book.description}</p>\r\n//               <img src={book.coverImage} alt={book.title} style={{ width: '150px' }} />\r\n//               {token && (\r\n//                 <button onClick={() => alert(`Editing book with ID: ${book.id}`)}>\r\n//                   Edit\r\n//                 </button>\r\n//               )}\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Books;\r\n\r\n\r\n// --------------------------------------------------------\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Books = ({ token }) => {\r\n  const [books, setBooks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:7000/books');\r\n        const data = await response.json();\r\n        setBooks(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching books:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBooks();\r\n  }, []);\r\n\r\n  const handleDelete = async (bookId) => {\r\n    const confirmDelete = window.confirm('Are you sure you want to delete this book?');\r\n    \r\n    if (confirmDelete) {\r\n      try {\r\n        const response = await fetch(`http://localhost:7000/books/${bookId}`, {\r\n          method: 'DELETE',\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to delete book');\r\n        }\r\n\r\n        // Remove the deleted book from the state\r\n        setBooks((prevBooks) => prevBooks.filter((book) => book.id !== bookId));\r\n        alert('Book deleted successfully!');\r\n      } catch (error) {\r\n        console.error(\"Error deleting book:\", error);\r\n        alert('Failed to delete book');\r\n      }\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading books...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Books</h1>\r\n      {books.length === 0 ? (\r\n        <p>No books available.</p>\r\n      ) : (\r\n        <ul>\r\n          {books.map((book) => (\r\n            <li key={book.id}>\r\n              <h3>{book.title}</h3>\r\n              <p>{book.author}</p>\r\n              <p>{book.description}</p>\r\n              <img src={book.coverImage} alt={book.title} style={{ width: '150px' }} />\r\n              \r\n              {token && (\r\n                <>\r\n                  <button onClick={() => alert(`Editing book with ID: ${book.id}`)}>\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDelete(book.id)}\r\n                    style={{ backgroundColor: 'red', color: 'white', marginLeft: '10px' }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Books;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}