{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parve\\\\Desktop\\\\book system\\\\frontend\\\\src\\\\components\\\\AddBook.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddBook = () => {\n  _s();\n  const [bookData, setBookData] = useState({\n    title: '',\n    author: '',\n    description: '',\n    publicationDate: '',\n    coverImage: '' // Option for image URL\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBookData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Ensure all fields are provided\n    if (!bookData.title || !bookData.author || !bookData.description || !bookData.publicationDate || !bookData.coverImage) {\n      alert('Please fill out all fields');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:7000/books', {\n        method: 'POST',\n        body: JSON.stringify(bookData),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add book');\n      }\n      const addedBook = await response.json(); // Assuming the server returns the added book\n\n      alert('Book added successfully!');\n\n      // Clear form after successful submission\n      setBookData({\n        title: '',\n        author: '',\n        description: '',\n        publicationDate: '',\n        coverImage: ''\n      });\n    } catch (error) {\n      console.error('Error adding book:', error);\n      alert('Failed to add book');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Book Title\",\n        value: bookData.title,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        placeholder: \"Author\",\n        value: bookData.author,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Description\",\n        value: bookData.description,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"publicationDate\",\n        value: bookData.publicationDate,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"coverImage\",\n        placeholder: \"Cover Image URL\",\n        value: bookData.coverImage,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(AddBook, \"it2lqBeN5nb+DfMxa44Z5/yO74A=\");\n_c = AddBook;\nexport default AddBook;\nvar _c;\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddBook","_s","bookData","setBookData","title","author","description","publicationDate","coverImage","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","alert","response","fetch","method","body","JSON","stringify","headers","ok","Error","addedBook","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/parve/Desktop/book system/frontend/src/components/AddBook.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddBook = () => {\r\n  const [bookData, setBookData] = useState({\r\n    title: '',\r\n    author: '',\r\n    description: '',\r\n    publicationDate: '',\r\n    coverImage: '', // Option for image URL\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setBookData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Ensure all fields are provided\r\n    if (!bookData.title || !bookData.author || !bookData.description || !bookData.publicationDate || !bookData.coverImage) {\r\n      alert('Please fill out all fields');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:7000/books', {\r\n        method: 'POST',\r\n        body: JSON.stringify(bookData),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to add book');\r\n      }\r\n\r\n      const addedBook = await response.json(); // Assuming the server returns the added book\r\n\r\n      alert('Book added successfully!');\r\n\r\n      // Clear form after successful submission\r\n      setBookData({\r\n        title: '',\r\n        author: '',\r\n        description: '',\r\n        publicationDate: '',\r\n        coverImage: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding book:', error);\r\n      alert('Failed to add book');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add a New Book</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Book Title\"\r\n          value={bookData.title}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"author\"\r\n          placeholder=\"Author\"\r\n          value={bookData.author}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={bookData.description}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"publicationDate\"\r\n          value={bookData.publicationDate}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"coverImage\"\r\n          placeholder=\"Cover Image URL\"\r\n          value={bookData.coverImage}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Add Book</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBook;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}